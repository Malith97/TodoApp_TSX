{"version":3,"sources":["components/TodoListItem.tsx","components/header.tsx","App.tsx","index.tsx"],"names":["TodoListItem","task","completeTask","useState","isActive","setActive","className","span","onChange","taskName","type","danger","onClick","header","App","setTask","todoList","setTodoList","taskNameToDelete","filter","placeholder","name","value","event","target","block","newTask","disabled","map","key","ReactDOM","render","document","getElementById"],"mappings":"oQAkDeA,EAlCM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,aAE1B,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OACI,mCACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,mCAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAD,CAAUC,SAVd,WAChBH,GAAWD,QAWK,cAAC,IAAD,CAAKG,KAAM,GAAX,SACI,oBAAID,UAAWF,EAAW,WAAa,GAAvC,SAA4CH,EAAKQ,aAErD,cAAC,IAAD,CAAKF,KAAM,EAAX,SACI,cAAC,IAAD,CAAQG,KAAK,UAAUC,QAAM,EACzBC,QAAS,WACLV,EAAaD,EAAKQ,WAF1B,gCClCb,SAASI,IACpB,OACI,qBAAKP,UAAU,YAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,oBAAIA,UAAU,SAAd,0CACA,mECOhB,IA0DeQ,EA1DC,WACd,MAAwBX,mBAAiB,IAAzC,mBAAOF,EAAP,KAAac,EAAb,KACA,EAAgCZ,mBAAkB,IAAlD,mBAAOa,EAAP,KAAiBC,EAAjB,KAgBMf,EAAe,SAACgB,GACpBD,EACED,EAASG,QAAO,SAAClB,GACf,OAAOA,EAAKQ,UAAYS,OAK9B,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,mCAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CACEG,KAAK,OACLU,YAAY,8BACZC,KAAK,OACLC,MAAOrB,EACPO,SAlCO,SAACe,GACM,SAAtBA,EAAMC,OAAOH,MACfN,EAAQQ,EAAMC,OAAOF,YAmCf,cAAC,IAAD,CAAKf,KAAM,EAAX,SACE,cAAC,IAAD,CAAQG,KAAK,UAAUe,OAAK,EAACb,QA9BzB,WACd,IAAMc,EAAU,CAAEjB,SAAUR,GAC5BgB,EAAY,GAAD,mBAAKD,GAAL,CAAeU,KAC1BX,EAAQ,KA2BiDY,UAAW1B,EAA1D,+BAOR,qBAAKK,UAAU,WAAf,SACGU,EAASY,KAAI,SAAC3B,EAAa4B,GAC1B,OAAO,cAAC,EAAD,CAAwB5B,KAAMA,EAAMC,aAAcA,GAA/B2B,YC5DpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e52205b7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"../App.scss\";\n\nimport { Button, Row, Col, Checkbox } from 'antd';\n\ninterface ITask {\n    taskName: string;\n}\n\n\ninterface Props {\n    task: ITask;\n    completeTask(taskNameToDelete: string): void;\n}\n\nconst TodoListItem = ({ task, completeTask }: Props) => {\n\n    const [isActive, setActive] = useState(false);\n\n    const toggleClass = () => {\n        setActive(!isActive);\n    };\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"bg-white rounded shadow p-6 m-4 \">\n                    <Row>\n                        <Col span={2}>\n                            <Checkbox onChange={toggleClass} />\n                        </Col>\n                        <Col span={18}>\n                            <h3 className={isActive ? \"complete\" : \"\"}>{task.taskName}</h3>\n                        </Col>\n                        <Col span={4}>\n                            <Button type=\"primary\" danger\n                                onClick={() => {\n                                    completeTask(task.taskName);\n                                }}>\n                                Delete\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default TodoListItem;","import React from 'react'\n\nexport default function header() {\n    return (\n        <div className=\"container\">\n            <div className=\"bg-white rounded shadow p-6 m-4 \">\n                <h1 className=\"header\">Hello Welcome to my TodoList</h1>\n                <p>Developed By Malith Ileperuma</p>\n            </div>\n        </div>\n    )\n}\n","import React, { FC, ChangeEvent, useState } from \"react\";\nimport \"./App.scss\";\nimport \"antd/dist/antd.css\";\n\nimport { Button, Row, Col, Input } from 'antd';\n\nimport TodoListItem from \"./components/TodoListItem\";\n\nimport Header from './components/header'\n\ninterface ITask {\n  taskName: string;\n}\n\nconst App: FC = () => {\n  const [task, setTask] = useState<string>(\"\");\n  const [todoList, setTodoList] = useState<ITask[]>([]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    } else {\n\n    }\n  };\n\n  const addTask = (): void => {\n    const newTask = { taskName: task };\n    setTodoList([...todoList, newTask]);\n    setTask(\"\");\n  };\n\n  const completeTask = (taskNameToDelete: string): void => {\n    setTodoList(\n      todoList.filter((task) => {\n        return task.taskName != taskNameToDelete;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"bg-white rounded shadow p-6 m-4 \">\n          <Row>\n            <Col span={16}>\n              <Input\n                type=\"text\"\n                placeholder=\"Please Enter Your Task Here\"\n                name=\"task\"\n                value={task}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col span={8}>\n              <Button type=\"primary\" block onClick={addTask} disabled={!task}>\n                Add Task\n              </Button>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <div className=\"todoList\">\n        {todoList.map((task: ITask, key: number) => {\n          return <TodoListItem key={key} task={task} completeTask={completeTask} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}